class Solution {
public:
    vector<int> findRightInterval(vector<vector<int>>& in) {
        int n = in.size();
        vector<pair<int, int>> v;
        
        for ( int i = 0 ; i < n ; i++) {
            v.push_back({in[i][0], i});
        }

        sort(v.begin(), v.end());

        vector<int>ans(n, -1);
        for ( int i = 0 ; i < n ;i++) {
            int e = in[i][1];

            int l = 0 ;
            int r = n - 1;
            int index = -1;

            while ( l <= r) {
                int mid = (l + r) / 2;

                if( v[mid].first >= e) {
                    index = v[mid].second;
                    r = mid - 1;
                }else l = mid + 1;
            } ans[i] = index;
        }
        return ans;
    }
};
