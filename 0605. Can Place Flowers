class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
        // If no flowers need to be planted, return true immediately
        if (n == 0) return true;

        int count = 0;
        int size = flowerbed.size();
        
        // Special case for flowerbed size 1
        if (size == 1) {
            return flowerbed[0] == 0 && n <= 1;
        }
        
        for (int i = 0; i < size; ++i) {
            if (flowerbed[i] == 0 && 
                (i == 0 || flowerbed[i - 1] == 0) && 
                (i == size - 1 || flowerbed[i + 1] == 0)) {
                flowerbed[i] = 1;
                count++;
                i++; // Skip the next plot as we can't plant adjacent flowers
                if (count >= n) return true;
            }
        }

        return count >= n;
    }
};
